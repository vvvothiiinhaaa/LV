
//////////////////////////////////////////////////
// H√†m m·ªü modal Th√™m Nh√¢n Vi√™n
function openAddModal() {
    document.getElementById("addModal").style.display = "flex"; // M·ªü modal Th√™m
}

// H√†m ƒë√≥ng modal
function closeModal(modalId) {
    const modal = document.getElementById(modalId);
    modal.style.display = "none";  // ·∫®n modal
}

// H√†m ƒë·ªÉ l·∫•y danh s√°ch nh√¢n vi√™n t·ª´ API v√† hi·ªÉn th·ªã v√†o b·∫£ng
async function fetchAndDisplayEmployees() {
    try {
        // G·ª≠i y√™u c·∫ßu GET ƒë·∫øn API ƒë·ªÉ l·∫•y danh s√°ch nh√¢n vi√™n
        const response = await fetch('http://localhost:8080/employees');

        if (response.ok) {
            // L·∫•y d·ªØ li·ªáu JSON t·ª´ ph·∫£n h·ªìi
            const employees = await response.json();

            // L·∫•y ph·∫ßn t·ª≠ tbody trong b·∫£ng
            const staffList = document.getElementById('staff-list');
            staffList.innerHTML = '';  // X√≥a c√°c h√†ng hi·ªán t·∫°i trong b·∫£ng

            // Duy·ªát qua t·∫•t c·∫£ nh√¢n vi√™n v√† t·∫°o c√°c d√≤ng trong b·∫£ng
            employees.forEach(employee => {
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td><input type="checkbox" class="employeeCheckbox" value="${employee.id}" onclick="toggleSelectAll()"></td>
                    <td>${employee.id}</td>
                    <td>${employee.username}</td>
                    <td>${employee.fullname}</td>
                    <td>${employee.status ? 'ƒêang Ho·∫°t ƒê·ªông' : 'ƒê√£ Kh√≥a'}</td>
                    <td>${employee.role}</td>
                    <td>
                        <button class="btn btn-info" onclick="editEmployee(${employee.id})">S·ª≠a</button>
                        <button class="btn btn-danger" onclick="deleteEmployee(${employee.id})">X√≥a</button>
                    </td>
                `;
                staffList.appendChild(row);
            });

            // üõ† Ki·ªÉm tra n·∫øu DataTable ƒë√£ kh·ªüi t·∫°o th√¨ h·ªßy tr∆∞·ªõc
            if ($.fn.DataTable.isDataTable('#datatablesSimple')) {
                $('#datatablesSimple').DataTable().destroy();
            }

            //  Kh·ªüi t·∫°o l·∫°i DataTables
            $('#datatablesSimple').DataTable({
                "stripeClasses": [],
                "paging": true,
                "searching": true,
                "ordering": true,
                "info": true,
                "lengthMenu": [3, 10, 30, 100],
                "language": {
                    "lengthMenu": "Hi·ªÉn th·ªã _MENU_ b·∫£n ghi m·ªói trang",
                    "zeroRecords": "Kh√¥ng t√¨m th·∫•y d·ªØ li·ªáu",
                    "info": "Hi·ªÉn th·ªã _START_ ƒë·∫øn _END_ c·ªßa _TOTAL_ b·∫£n ghi",
                    "infoEmpty": "Kh√¥ng c√≥ b·∫£n ghi n√†o",
                    "infoFiltered": "(L·ªçc t·ª´ _MAX_ b·∫£n ghi)",
                    "search": "T√¨m ki·∫øm:",
                    "paginate": {
                        "first": "ƒê·∫ßu",
                        "last": "Cu·ªëi",
                        "next": ">",
                        "previous": "<"
                    }
                }
            });

        } else {
            alert('C√≥ l·ªói khi l·∫•y danh s√°ch nh√¢n vi√™n.');
        }
    } catch (error) {
        alert('Kh√¥ng th·ªÉ k·∫øt n·ªëi v·ªõi m√°y ch·ªß.');
        console.error("L·ªói:", error);
    }
}

// G·ªçi h√†m khi trang t·∫£i xong
document.addEventListener("DOMContentLoaded", fetchAndDisplayEmployees);


// G·ªçi h√†m ƒë·ªÉ hi·ªÉn th·ªã danh s√°ch nh√¢n vi√™n khi trang ƒë∆∞·ª£c t·∫£i
window.onload = fetchAndDisplayEmployees;

// H√†m th√™m nh√¢n vi√™n m·ªõi
async function addEmployee() {
    const fullname = document.getElementById('fullname').value;
    const username = document.getElementById('username').value;
    const email = document.getElementById('email').value;
    const birthdate = document.getElementById('birthdate').value;
    const phonenumber = document.getElementById('phonenumber').value;
    const password = document.getElementById('password').value;
    const file = document.getElementById('file').files[0];

    if (!fullname || !username || !password || !email) {
        alert("Vui l√≤ng ƒëi·ªÅn ƒë·∫ßy ƒë·ªß th√¥ng tin.");
        return;
    }

    const formData = new FormData();
    formData.append("fullname", fullname);
    formData.append("username", username);
    formData.append("email", email);
    formData.append("birthdate", birthdate);
    formData.append("phonenumber", phonenumber);
    formData.append("password", password);
    if (file) {
        formData.append("file", file);
    }

    try {
        const response = await fetch('/admin/create-employee', {
            method: 'POST',
            body: formData
        });

        if (!response.ok) {
            const errorResponse = await response.text();
            console.error('L·ªói:', errorResponse);
            alert(`L·ªói: ${errorResponse}`);
            return;
        }

        alert('T·∫°o t√†i kho·∫£n th√†nh c√¥ng!');
        closeModal1() ;
        location.reload();
    } catch (error) {
        alert('Kh√¥ng th·ªÉ k·∫øt n·ªëi v·ªõi m√°y ch·ªß.');
    }
}

    function closeModal1() {
        document.getElementById("addModal").style.display = "none";
    
        let backdrop = document.querySelector(".modal-backdrop");
        if (backdrop) {
            backdrop.remove();  // X√≥a h·∫≥n kh·ªèi HTML
        }
    }

    function closeModal2() {
        document.getElementById("editModal").style.display = "none";
    
        let backdrop = document.querySelector(".modal-backdrop");
        if (backdrop) {
            backdrop.remove();  // X√≥a h·∫≥n kh·ªèi HTML
        }
    }
      function closeModal3() {
        document.getElementById("disableAccountModal").style.display = "none";
    
        let backdrop = document.querySelector(".modal-backdrop");
        if (backdrop) {
            backdrop.remove();  // X√≥a h·∫≥n kh·ªèi HTML
        }
    }
    
    

// H√†m l·∫•y chi ti·∫øt th√¥ng tin nh√¢n vi√™n t·ª´ server
function editEmployee(id) {
    fetch(`/employee/${id}/detailt`)
        .then(response => response.json())
        .then(employee => {
            document.getElementById('editEmployeeId').value = employee.id;
            document.getElementById('editFullname').value = employee.fullname;
            document.getElementById('editUsername').value = employee.username;
            document.getElementById('editEmail').value = employee.email;
            document.getElementById('editBirthdate').value = employee.birthdate;
            document.getElementById('editPhonenumber').value = employee.phonenumber;
            document.getElementById('editPassword').value = employee.password;
            document.getElementById('editRole').value = 'STAFF';  // Role m·∫∑c ƒë·ªãnh l√† STAFF
            document.getElementById('editStatus').checked = employee.status;

            // Hi·ªÉn th·ªã URL ·∫£nh hi·ªán t·∫°i trong input
            document.getElementById('editUrl').value = employee.url;  // Hi·ªÉn th·ªã ·∫£nh hi·ªán t·∫°i

            // M·ªü modal s·ª≠a th√¥ng tin nh√¢n vi√™n
            openModal('editModal');
        })
        .catch(error => {
            alert('C√≥ l·ªói x·∫£y ra khi l·∫•y th√¥ng tin nh√¢n vi√™n.');
        });
}

// H√†m c·∫≠p nh·∫≠t th√¥ng tin nh√¢n vi√™n (g·ª≠i d∆∞·ªõi d·∫°ng FormData)
async function updateEmployee() {
    const id = document.getElementById('editEmployeeId').value;
    const fullname = document.getElementById('editFullname').value.trim();
    const username = document.getElementById('editUsername').value.trim();
    const email = document.getElementById('editEmail').value.trim();
    const birthdate = document.getElementById('editBirthdate').value;
    const phonenumber = document.getElementById('editPhonenumber').value.trim();
    const password = document.getElementById('editPassword').value.trim();
    const status = document.getElementById('editStatus').checked;
    const url = document.getElementById('editUrl').value.trim();
    const file = document.getElementById('editFile').files[0]; // L·∫•y ·∫£nh m·ªõi (n·∫øu c√≥)

    // Ki·ªÉm tra c√°c tr∆∞·ªùng b·∫Øt bu·ªôc c√≥ ƒë∆∞·ª£c ƒëi·ªÅn hay kh√¥ng
    if (!fullname || !username || !email || !password) {
        alert("Vui l√≤ng ƒëi·ªÅn ƒë·∫ßy ƒë·ªß th√¥ng tin.");
        return;
    }

    // T·∫°o FormData ƒë·ªÉ g·ª≠i file ·∫£nh c√πng v·ªõi c√°c d·ªØ li·ªáu kh√°c
    const formData = new FormData();
    formData.append("fullname", fullname);
    formData.append("username", username);
    formData.append("email", email);
    formData.append("birthdate", birthdate);
    formData.append("phonenumber", phonenumber);
    formData.append("password", password);
    formData.append("role", 'STAFF');  // Role m·∫∑c ƒë·ªãnh l√† STAFF
    formData.append("status", status);
    formData.append("url", file ? file.name : url); // N·∫øu c√≥ file, g·ª≠i t√™n file, n·∫øu kh√¥ng g·ª≠i url hi·ªán t·∫°i

    // Th√™m file n·∫øu c√≥
    if (file) {
        formData.append("file", file);
    }

    try {
        const response = await fetch(`/employee/${id}`, {
            method: 'PUT',
            body: formData
        });

        if (!response.ok) {
            const errorResponse = await response.text();
            console.error('L·ªói:', errorResponse);
            alert(`L·ªói khi c·∫≠p nh·∫≠t th√¥ng tin: ${errorResponse}`);
            return;
        }

        alert('C·∫≠p nh·∫≠t th√¥ng tin th√†nh c√¥ng!');
        closeModal('editModal');  // ƒê√≥ng modal S·ª≠a
        fetchAndDisplayEmployees();  // L√†m m·ªõi danh s√°ch nh√¢n vi√™n
        location.reload();
    } catch (error) {
        console.error('L·ªói khi c·∫≠p nh·∫≠t th√¥ng tin:', error);
        alert('Kh√¥ng th·ªÉ k·∫øt n·ªëi v·ªõi m√°y ch·ªß.');
    }
}


// // H√†m c·∫≠p nh·∫≠t th√¥ng tin nh√¢n vi√™n
// async function updateEmployee() {
//     const id = document.getElementById('editEmployeeId').value;
//     const fullname = document.getElementById('editFullname').value.trim();
//     const username = document.getElementById('editUsername').value.trim();
//     const email = document.getElementById('editEmail').value.trim();
//     const birthdate = document.getElementById('editBirthdate').value;
//     const phonenumber = document.getElementById('editPhonenumber').value.trim();
//     const password = document.getElementById('editPassword').value.trim();
//     const status = document.getElementById('editStatus').checked;
//     const url = document.getElementById('editUrl').value.trim();

//     // Ki·ªÉm tra c√°c tr∆∞·ªùng b·∫Øt bu·ªôc c√≥ ƒë∆∞·ª£c ƒëi·ªÅn hay kh√¥ng
//     if (!fullname || !username || !email || !password) {
//         alert("Vui l√≤ng ƒëi·ªÅn ƒë·∫ßy ƒë·ªß th√¥ng tin.");
//         return;
//     }

//     const params = new URLSearchParams();
//     params.append("fullname", fullname);
//     params.append("username", username);
//     params.append("email", email);
//     params.append("birthdate", birthdate);
//     params.append("phonenumber", phonenumber);
//     params.append("password", password);
//     params.append("role", "STAFF");
//     params.append("status", status);
//     params.append("url", url);

//     try {
//         // G·ª≠i y√™u c·∫ßu PUT v·ªõi d·ªØ li·ªáu d·∫°ng `x-www-form-urlencoded`
//         const response = await fetch(`/employee/${id}`, {
//             method: 'PUT',
//             headers: { 
//                 'Content-Type': 'application/x-www-form-urlencoded' // ƒê·ªãnh d·∫°ng ph√π h·ª£p v·ªõi `@RequestParam`
//             },
//             body: params.toString() // Chuy·ªÉn d·ªØ li·ªáu th√†nh chu·ªói URL encoded
//         });

//         // Ki·ªÉm tra n·∫øu ph·∫£n h·ªìi kh√¥ng h·ª£p l·ªá
//         if (!response.ok) {
//             const errorResponse = await response.text();
//             console.error('L·ªói:', errorResponse);
//             alert(`L·ªói khi c·∫≠p nh·∫≠t th√¥ng tin: ${errorResponse}`);
//             return;
//         }

//         // N·∫øu th√†nh c√¥ng, th√¥ng b√°o v√† l√†m m·ªõi danh s√°ch nh√¢n vi√™n
//         alert('C·∫≠p nh·∫≠t th√¥ng tin th√†nh c√¥ng!');
//         modal.hide();   // ƒê√≥ng modal S·ª≠a
//         fetchAndDisplayEmployees();  // L√†m m·ªõi danh s√°ch nh√¢n vi√™n

//     } catch (error) {
//         console.error('L·ªói khi c·∫≠p nh·∫≠t th√¥ng tin:', error);
//         alert('Kh√¥ng th·ªÉ k·∫øt n·ªëi v·ªõi m√°y ch·ªß.');
//     }
// }



// M·∫£ng l∆∞u c√°c ID c·ªßa nh√¢n vi√™n ƒë√£ ch·ªçn
let selectedEmployee = [];

// H√†m ch·ªçn t·∫•t c·∫£ checkbox
function selectAllCheckboxes() {
    const selectAllCheckbox = document.getElementById('selectAll');
    const checkboxes = document.querySelectorAll('.employeeCheckbox');

    selectedEmployee = selectAllCheckbox.checked ? Array.from(checkboxes).map(checkbox => checkbox.value) : [];

    checkboxes.forEach(checkbox => {
        checkbox.checked = selectAllCheckbox.checked;
    });
}

// H√†m khi m·ªôt checkbox thay ƒë·ªïi tr·∫°ng th√°i
function toggleSelectAll() {
    const checkboxes = document.querySelectorAll('.employeeCheckbox');
    const selectAllCheckbox = document.getElementById('selectAll');

    checkboxes.forEach(checkbox => {
        if (checkbox.checked) {
            if (!selectedEmployee.includes(checkbox.value)) {
                selectedEmployee.push(checkbox.value);
            }
        } else {
            const index = selectedEmployee.indexOf(checkbox.value);
            if (index !== -1) {
                selectedEmployee.splice(index, 1);
            }
        }
    });

    const allChecked = Array.from(checkboxes).every(checkbox => checkbox.checked);
    selectAllCheckbox.checked = allChecked;
}

// H√†m khi ch·ªçn m·ªôt checkbox ri√™ng l·∫ª
function handleIndividualCheckboxChange() {
    const checkboxes = document.querySelectorAll('.employeeCheckbox');
    selectedEmployee = [];

    checkboxes.forEach(checkbox => {
        if (checkbox.checked) {
            selectedEmployee.push(checkbox.value);
        }
    });
}

// H√†m ƒë·ªÉ m·ªü modal x√°c nh·∫≠n v√¥ hi·ªáu h√≥a t√†i kho·∫£n
function disableAccount() {
    if (selectedEmployee.length === 0) {
        alert("Vui l√≤ng ch·ªçn √≠t nh·∫•t m·ªôt t√†i kho·∫£n ƒë·ªÉ v√¥ hi·ªáu h√≥a.");
        return;
    }

    // M·ªü modal x√°c nh·∫≠n
    const modal = new bootstrap.Modal(document.getElementById('disableAccountModal'));
    modal.show();
}
// H√†m x√°c nh·∫≠n c·∫≠p nh·∫≠t tr·∫°ng th√°i t√†i kho·∫£n
async function confirmDisableAccount() {
    const status = document.getElementById('statusSelect').value === 'true';  // true: k√≠ch ho·∫°t, false: v√¥ hi·ªáu h√≥a

    for (let i = 0; i < selectedEmployee.length; i++) {
        const employeeId = selectedEmployee[i];

        try {
            // L·∫•y URL c·ªßa nh√¢n vi√™n n·∫øu c√≥, n·∫øu kh√¥ng th√¨ g√°n gi√° tr·ªã m·∫∑c ƒë·ªãnh

            const response = await fetch(`/employee/${employeeId}/status?status=${status}`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json'
                },
            });

            if (!response.ok) {
                const errorResponse = await response.text();
                console.error('L·ªói:', errorResponse);
                alert(`L·ªói: ${errorResponse}`);
            }
        } catch (error) {
            console.error('L·ªói khi c·∫≠p nh·∫≠t tr·∫°ng th√°i:', error);
            alert('Kh√¥ng th·ªÉ k·∫øt n·ªëi v·ªõi m√°y ch·ªß.');
        }
    }

    alert('C·∫≠p nh·∫≠t tr·∫°ng th√°i t√†i kho·∫£n th√†nh c√¥ng!');
    fetchAndDisplayEmployees(); // L√†m m·ªõi danh s√°ch nh√¢n vi√™n
    location.reload();
}


// H√†m m·ªü modal
function openModal(modalId) {
    const modalElement = document.getElementById(modalId);
    if (modalElement) {
        const modal = new bootstrap.Modal(modalElement, {
            backdrop: 'true', // Cho ph√©p ƒë√≥ng khi nh·∫•n b√™n ngo√†i modal
            keyboard: true  // Cho ph√©p ƒë√≥ng b·∫±ng ph√≠m ESC
        });
        modal.show();
    } else {
        console.error(`Modal v·ªõi ID ${modalId} kh√¥ng t·ªìn t·∫°i.`);
    }
}

// H√†m ƒë√≥ng modal
function closeModal(modalId) {
    const modalElement = document.getElementById(modalId);
    const modal = new bootstrap.Modal(modalElement);
    modal.hide();  // ƒê·∫£m b·∫£o modal b·ªã ƒë√≥ng
}

function disableAccountclose() {
    closeModal('disableAccountModal');
}


// ///// x√≥a t√†i kho·∫£n nh√¢n vi√™n
function deleteEmployee(employeeId) {
    if (confirm("B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a t√†i kho·∫£n n√†y kh√¥ng?")) {
        fetch(`/employee/${employeeId}`, {
            method: "DELETE",
            headers: {
                "Content-Type": "application/json"
            }
        })
        .then(response => {
            if (response.status === 204) {
                alert("X√≥a t√†i kho·∫£n th√†nh c√¥ng!");
                location.reload(); // Reload trang ƒë·ªÉ c·∫≠p nh·∫≠t danh s√°ch
            } else if (response.status === 404) {
                alert("Kh√¥ng t√¨m th·∫•y t√†i kho·∫£n!");
            } else {
                alert("C√≥ l·ªói x·∫£y ra, vui l√≤ng th·ª≠ l·∫°i!");
            }
        })
        .catch(error => {
            console.error("L·ªói:", error);
            alert("L·ªói k·∫øt n·ªëi ƒë·∫øn server!");
        });
    }
}